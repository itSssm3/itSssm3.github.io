<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>kali tmux 配置和优化</title>
      <link href="/posts/a72e366ab9c5/"/>
      <url>/posts/a72e366ab9c5/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今天看了个渗透比赛的视频 看起来很多终端用起来很爽又很方便 查了一下是个叫做 tmux 的工具 也整一个~</p><h1 id="下载-tmux"><a href="#下载-tmux" class="headerlink" title="下载 tmux"></a>下载 tmux</h1><p>kali 自带 但是还是放一个下载的方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install tmux</span><br></pre></td></tr></table></figure><p>然后就好了</p><h1 id="优化-tmux"><a href="#优化-tmux" class="headerlink" title="优化 tmux"></a>优化 tmux</h1><p><a href="https://www.cnblogs.com/zuoruining/p/11074367.html">参考1</a>      <a href="http://louiszhai.github.io/2017/09/30/tmux/#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A4%8D%E5%88%B6%E5%92%8C%E9%80%89%E6%8B%A9%E5%BF%AB%E6%8D%B7%E9%94%AE">参考2</a></p><p><strong>首先提示！！！ kali 里面跟网上很多是mac等系统就是 linux 的不一样</strong></p><p>很多配置好的是弄不了或者很麻烦 就没有必要了 毕竟实用最重要 加一点点美化就行了</p><p>这是我的配置文件 可以直接复制到 ~&#x2F;.tmux.config 下然后就可以了</p><p>tmux 会自动识别这个文件作为配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> -g prefix C-f</span><br><span class="line">unbind C-b <span class="comment"># C-b 即 Ctrl+b 键，unbind 意味着解除绑定</span></span><br><span class="line"><span class="built_in">bind</span> C-f send-prefix <span class="comment"># 绑定 Ctrl+f 为新的指令前缀</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从tmux v1.6版起，支持设置第二个指令前缀</span></span><br><span class="line">set-option -g prefix2 ` <span class="comment"># 设置一个不常用的`键作为指令前缀，按键更快些</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加加载配置文件快捷指令 r</span></span><br><span class="line"><span class="built_in">bind</span> r source-file ~/.tmux.conf \; display-message <span class="string">&quot;Config reloaded..&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># v2.1及以上的版本支持鼠标</span></span><br><span class="line">set-option -g mouse on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改新增面板键</span></span><br><span class="line">unbind <span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line"><span class="built_in">bind</span> - splitw -v -c <span class="string">&#x27;#&#123;pane_current_path&#125;&#x27;</span> <span class="comment"># 垂直方向新增面板，默认进入当前目录</span></span><br><span class="line">unbind %</span><br><span class="line"><span class="built_in">bind</span> =  splitw -h -c <span class="string">&#x27;#&#123;pane_current_path&#125;&#x27;</span> <span class="comment"># 水平方向新增面板，默认进入当前目录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置窗口面板起始序号</span></span><br><span class="line"><span class="built_in">set</span> -g base-index 1 <span class="comment"># 设置窗口的起始下标为1</span></span><br><span class="line"><span class="built_in">set</span> -g pane-base-index 1 <span class="comment"># 设置面板的起始下标为1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义状态栏（还可以优化 慢慢来）</span></span><br><span class="line"><span class="comment"># set -g status-utf8 on # 状态栏支持utf8 这个kali不支持 就算了</span></span><br><span class="line"><span class="built_in">set</span> -g status-interval 1 <span class="comment"># 状态栏刷新时间</span></span><br><span class="line"><span class="built_in">set</span> -g status-justify left <span class="comment"># 状态栏列表左对齐</span></span><br><span class="line">setw -g monitor-activity on <span class="comment"># 非当前窗口有内容更新时在状态栏通知</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -g status-bg black <span class="comment"># 设置状态栏背景黑色</span></span><br><span class="line"><span class="built_in">set</span> -g status-fg yellow <span class="comment"># 设置状态栏前景黄色</span></span><br><span class="line"><span class="built_in">set</span> -g status-style <span class="string">&quot;bg=black, fg=yellow&quot;</span> <span class="comment"># 状态栏前景背景色</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -g status-left <span class="string">&quot;#[bg=#FF661D] ❐ #S &quot;</span> <span class="comment"># 状态栏左侧内容</span></span><br><span class="line"><span class="built_in">set</span> -wg window-status-format <span class="string">&quot; #I #W &quot;</span> <span class="comment"># 状态栏窗口名称格式</span></span><br><span class="line"><span class="built_in">set</span> -wg window-status-current-format <span class="string">&quot; #I:#W#F &quot;</span> <span class="comment"># 状态栏当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)</span></span><br><span class="line"><span class="built_in">set</span> -wg window-status-separator <span class="string">&quot;&quot;</span> <span class="comment"># 状态栏窗口名称之间的间隔</span></span><br><span class="line"><span class="built_in">set</span> -wg window-status-current-style <span class="string">&quot;bg=red&quot;</span> <span class="comment"># 状态栏当前窗口名称的样式</span></span><br><span class="line"><span class="built_in">set</span> -wg window-status-last-style <span class="string">&quot;fg=red&quot;</span> <span class="comment"># 状态栏最后一个窗口名称的样式</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -g message-style <span class="string">&quot;bg=#202529, fg=#91A8BA&quot;</span> <span class="comment"># 指定消息通知的前景、后景色</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制模式更改为 vi 风格</span></span><br><span class="line">setw -g mode-keys vi <span class="comment"># 开启vi风格后，支持vi的C-d、C-u、hjkl等快捷键</span></span><br><span class="line"><span class="comment"># 复制模式向 vi 靠拢</span></span><br><span class="line"><span class="built_in">bind</span> -T copy-mode-vi v send-keys -X begin-selection <span class="comment"># 绑定v键为开始选择文本</span></span><br><span class="line"><span class="built_in">bind</span> -T copy-mode-vi y send-keys -X copy-selection-and-cancel <span class="comment"># 绑定y键为复制选中文本</span></span><br><span class="line"><span class="built_in">bind</span> p pasteb <span class="comment"># 绑定p键为粘贴文本（p键默认用于进入上一个窗口，不建议覆盖）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tmux默认会自动重命名窗口，频繁的命令行操作，将频繁触发重命名，比较浪费CPU性能，性能差的计算机上，问题可能更为明显。建议添加如下配置关闭rename机制</span></span><br><span class="line">setw -g automatic-rename off</span><br><span class="line">setw -g allow-rename off</span><br></pre></td></tr></table></figure><p>其实支持鼠标已经基本无敌</p><p><img src="https://z1.ax1x.com/2023/09/22/pPo0idI.png"></p><p>比如你右键就可以直接看到一个菜单 可以直接进行 <strong>split kill zoom</strong>甚至可以<strong>直接拖动分好的边界直接进行移动</strong>了 最重要的是可以<strong>用滚轮上下滑动</strong>了！！！</p><h1 id="快捷键等"><a href="#快捷键等" class="headerlink" title="快捷键等"></a>快捷键等</h1><p>这里就放一个网站呗 <a href="https://tmuxcheatsheet.com/">这个</a></p><p>快捷键之类的可以自己记 或者用 &lt;prefix&gt; + ? 来查看 list （鼠标真方便嘻嘻）</p>]]></content>
      
      
      <categories>
          
          <category> Tricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推一下自己写的pwn docker build files</title>
      <link href="/posts/9d82bd5b40ea/"/>
      <url>/posts/9d82bd5b40ea/</url>
      
        <content type="html"><![CDATA[<hr><h3 id="本文转载自关于推一下自己写的pwn-docker-build-files-P3troL1er-的个人博客，敬请关注并支持原作者P3troL1er-的个人博客"><a href="#本文转载自关于推一下自己写的pwn-docker-build-files-P3troL1er-的个人博客，敬请关注并支持原作者P3troL1er-的个人博客" class="headerlink" title="本文转载自关于推一下自己写的pwn docker build files - P3troL1er 的个人博客，敬请关注并支持原作者P3troL1er 的个人博客"></a>本文转载自关于<a href="https://peterliuzhi.top/posts/%E6%8E%A8%E4%B8%80%E4%B8%8B%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84pwn-docker-build-files/">推一下自己写的pwn docker build files - P3troL1er 的个人博客</a>，敬请关注并支持原作者<a href="https://peterliuzhi.top/">P3troL1er 的个人博客</a></h3><hr><blockquote><p>Real magic in relationships means an absence of judgement of others.<br>— <cite>Wayne Dyer</cite></p></blockquote><p>很久之前写了一组专用于pwn的docker构建文件，包含Ubuntu16、Ubuntu18、Ubuntu20、Ubuntu22，后来对其进行了更改但是因为懒一直没有更新，今天更新一下然后顺便在博客推荐一下</p><p>注意，使用我的dockerfile一定要设置共享文件夹（当然如果你不想可以在docker-compose.yml）中删除相应的语句，同时我也推荐大家设置共享文件集，因为这样四个docker的工作目录就是实时互通的，相互切换极其方便</p><p>同时，我不建议在Windows上搭建pwn docker，虽然我原本写这个dockerfile是在Windows上搭建的，但是经过一段时间使用还是放弃了。原因之一是vscode进行ssh远程连接的时候每一个docker都要重新下载一遍插件，一共就是下载4次，而有些时候vscode插件在天朝不是很好下载。有人可能会问，既然都有共享文件夹了，我直接在Windows上打开vscode不就好了？非也，最重要的一点就是pwntools没有Windows版本。因此我还是建议创建一个虚拟机，然后在虚拟机中搭建docker，然后vscode连接这个虚拟机的共享文件夹就好了。</p><p><a href="https://github.com/PeterLiu-all/PwnDockerBuildFiles">项目目录在此</a>，欢迎下载与star！</p>]]></content>
      
      
      <categories>
          
          <category> Reproduction </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwn </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用vim在man、tldr、cppman库间搜索帮助手册并打开</title>
      <link href="/posts/53eacb305bba/"/>
      <url>/posts/53eacb305bba/</url>
      
        <content type="html"><![CDATA[<hr><h3 id="本文转载自使用vim在man、tldr、cppman库间搜索帮助手册并打开-P3troL1er-的个人博客，敬请关注并支持原作者P3troL1er-的个人博客"><a href="#本文转载自使用vim在man、tldr、cppman库间搜索帮助手册并打开-P3troL1er-的个人博客，敬请关注并支持原作者P3troL1er-的个人博客" class="headerlink" title="本文转载自使用vim在man、tldr、cppman库间搜索帮助手册并打开 - P3troL1er 的个人博客，敬请关注并支持原作者P3troL1er 的个人博客"></a>本文转载自<a href="https://peterliuzhi.top/tricks/%E4%BD%BF%E7%94%A8vim%E5%9C%A8mantldrcppman%E5%BA%93%E9%97%B4%E6%90%9C%E7%B4%A2%E5%B8%AE%E5%8A%A9%E6%89%8B%E5%86%8C%E5%B9%B6%E6%89%93%E5%BC%80/">使用vim在man、tldr、cppman库间搜索帮助手册并打开 - P3troL1er 的个人博客</a>，敬请关注并支持原作者<a href="https://peterliuzhi.top/">P3troL1er 的个人博客</a></h3><hr><blockquote><p>Technological progress has merely provided us with more efficient means for going backwards.<br>— <cite>Aldous Huxley</cite></p></blockquote><p>这里我是写了一个bash脚本，只需要使用命令<code>viman -e 函数/命令名</code>就能自动在man&#x2F;cppman间搜索。之所以写这个脚本最主要的动机是cppman里将cppman的数据导入man失败了并且不知道怎么修复…并且man自带的编辑器（文本浏览器？）不好用，并且还想集成tldr</p><p>项目目录见<a href="https://github.com/PeterLiu-all/viman">GitHub - PeterLiu-all&#x2F;viman: 在命令行和vim中查看Linux manual，数据库包括man、cppman、tldr</a></p><p>注意，想要使用该脚本必须先下载cppman和tldr：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pip3 install cppman</span><br><span class="line">sudo apt install -y tldr</span><br><span class="line">tldr --update</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如有需要，可以缓存cppman的离线数据库</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">笔者花了几个小时才下载完，而且可能是代码问题经常卡死，需要手动重启</span></span><br><span class="line">cppman -c</span><br></pre></td></tr></table></figure><p>接下来就是脚本了，使用方法（注意-e是必须的）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">普通使用</span></span><br><span class="line">viman -e 名称</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示帮助</span></span><br><span class="line">viman -h</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用tldr</span></span><br><span class="line">viman -t -e 名称</span><br></pre></td></tr></table></figure><p>然后将下面的脚本保存为文件viman:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--Written By P3troL1er--&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&gt; Welcome to my blog: https://peterliuzhi.top&quot;</span></span><br><span class="line"></span><br><span class="line">cppman -v &gt;&gt; /dev/null 2&gt;&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Can&#x27;t find cppman!&quot;</span> 1&gt;&amp;2</span><br><span class="line">    python3 -m pip install cppman</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;ERROR found when installing cppman!&quot;</span> 1&gt;&amp;2</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;used command to install: python3 -m pip install cppman&quot;</span> 1&gt;&amp;2</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;try to find out that if the command is not available on your system!(check if you have python3 and pip)&quot;</span> 1&gt;&amp;2</span><br><span class="line">        <span class="built_in">exit</span> 127</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">tldr -v &gt;&gt; /dev/null 2&gt;&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Can&#x27;t find tldr!&quot;</span> 1&gt;&amp;2</span><br><span class="line">    sudo apt install tldr -y</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;ERROR found when installing tldr!&quot;</span> 1&gt;&amp;2</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;used command to install: sudo apt install tldr -y&quot;</span> 1&gt;&amp;2</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;try to find out that if the command is not available on your system!(check if you are using debian-based system like Ubuntu)&quot;</span> 1&gt;&amp;2</span><br><span class="line">        <span class="built_in">exit</span> 127</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">help_guide</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;USAGE: <span class="variable">$0</span> [OPTIONS] -e MAN_ENTRY&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;HELP: <span class="variable">$0</span> -h&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;USE_TLDR: <span class="variable">$0</span> -t -e MAN_ENTRY&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;BY P3troL1er&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">helper=0</span><br><span class="line">NORMAL_MAN=<span class="string">&quot;man&quot;</span></span><br><span class="line">use_tldr=0</span><br><span class="line">entry_name=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">getopts</span> <span class="string">&quot;hte:&quot;</span> opt; <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">case</span> <span class="variable">$opt</span> <span class="keyword">in</span></span><br><span class="line">    h)</span><br><span class="line">      helper=1</span><br><span class="line">      ;;</span><br><span class="line">    t)</span><br><span class="line">      NORMAL_MAN=<span class="string">&quot;tldr&quot;</span></span><br><span class="line">      use_tldr=1</span><br><span class="line">      ;;</span><br><span class="line">    e)</span><br><span class="line">      entry_name=<span class="variable">$OPTARG</span></span><br><span class="line">      ;;</span><br><span class="line">    \?)</span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;Invalid option: -<span class="variable">$OPTARG</span>&quot;</span> &gt;&amp;2</span><br><span class="line">      help_guide</span><br><span class="line">      <span class="built_in">exit</span> 1</span><br><span class="line">      ;;</span><br><span class="line">  <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$helper</span> -eq 1 ]; <span class="keyword">then</span></span><br><span class="line">    help_guide</span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">VIMAN_ARG=`<span class="built_in">mktemp</span> /tmp/viman.temp.XXXXXX`</span><br><span class="line">RETURN_MSG=`<span class="variable">$NORMAL_MAN</span> <span class="variable">$entry_name</span> &gt;&gt; <span class="variable">$VIMAN_ARG</span>`</span><br><span class="line">VIMAN_EXITCODE=$?</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$RETURN_MSG</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    VIMAN_EXITCODE=16</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$VIMAN_EXITCODE</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$use_tldr</span> -eq 1 ]; <span class="keyword">then</span></span><br><span class="line">        vim <span class="variable">$VIMAN_ARG</span> -c <span class="string">&quot;:term ++curwin cat %&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        vim <span class="variable">$VIMAN_ARG</span> -c <span class="string">&quot;set nonumber&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$NORMAL_MAN</span> failed! using cppman...&quot;</span></span><br><span class="line">    RETURN_MSG=`cppman <span class="string">&quot;<span class="variable">$entry_name</span>&quot;</span>`</span><br><span class="line">    <span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$RETURN_MSG</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Not even in cppman!&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">rm</span> <span class="variable">$VIMAN_ARG</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$VIMAN_EXITCODE</span> -ne 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Coundn&#x27;t find manual for <span class="variable">$entry_name</span>!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$VIMAN_EXITCODE</span></span><br></pre></td></tr></table></figure><p>然后放到&#x2F;usr&#x2F;local&#x2F;bin中并<code>sudo chmod +x /usr/local/bin/viman</code>后大功告成</p><p>如果想要在vim里面查看，可以使用命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tabnew | exec &quot;:term ++curwin viman -e &lt;entry_name&gt;&quot;</span><br></pre></td></tr></table></figure><p>这个命令会新打开一个tab执行shell命令</p><p>然而这个命令实在是太长了，我们可以在~&#x2F;.vimrc中写入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function! VimanFunc(entry_name, ...)</span><br><span class="line">    let args = join(a:000, &#x27; &#x27;)</span><br><span class="line">    tabnew | execute &quot;term ++curwin viman -e &quot; . a:entry_name . &quot; &quot; . args</span><br><span class="line">endfunction</span><br><span class="line"></span><br><span class="line">command! -nargs=+ Viman :call VimanFunc(&lt;f-args&gt;)</span><br><span class="line">cnoreabbrev viman Viman</span><br></pre></td></tr></table></figure><p>使用的时候只需要在vim中输入<code>:viman &lt;entry_name&gt; ...</code>即可</p><p><img src="https://peterliuzhi.top/image/Pasted%20image%2020230604001025.png"></p>]]></content>
      
      
      <categories>
          
          <category> Reproduction </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记 win11 重置网络后虚拟机恢复网络</title>
      <link href="/posts/669039237398/"/>
      <url>/posts/669039237398/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这几天弄 nt 校园网 重置了电脑（win11）的网络设置</p><p><img src="https://z1.ax1x.com/2023/09/22/pPow7L9.png"></p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>md 当时重置就想到虚拟机可能g了 结果果然 网没弄好 虚拟机也g了</p><p>开机在登陆界面黑屏很久才显示 ping外网也ping不通了</p><p>想想办法 开机黑屏想到之前扩容的情况 看了一下suid 好像没事</p><p>再试试按照刚开始小白时期配网的方法</p><p><img src="https://z1.ax1x.com/2023/09/22/pPowbZR.png"></p><p>然后 <strong>更改设置</strong> —&gt; <strong>恢复默认设置</strong></p><p><img src="https://z1.ax1x.com/2023/09/22/pPowXi6.png"></p><p>貌似好了？</p><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><p>第二天起床 发现还是g 差点崩溃了</p><p>又到处搜资料 终于！<a href="https://blog.csdn.net/qq_36408196/article/details/103390303">无敌</a> 唤醒了我之前的记忆</p><p><img src="https://z1.ax1x.com/2023/09/22/pPowvRO.png"></p><p>md 还是 sb 校园网的问题 更是 sb 锐捷 真414</p><p>昨天搞校园网的时候 重新下了一遍锐捷客户端 </p><p>忘记了刚开学的时候就已经把锐捷的自动关闭NAT服务改了</p><p>新的锐捷客户端就没改 妈的 以为是什么问题</p><p>所以说 记录下来还是非常有必要的 又浪费了好多好多的时间……</p><p>再骂一遍 sb校园网 还有不要随便重置网络了以后</p><h1 id="顺便记录一下新手时期配置-kali-的参考文章"><a href="#顺便记录一下新手时期配置-kali-的参考文章" class="headerlink" title="顺便记录一下新手时期配置 kali 的参考文章"></a>顺便记录一下新手时期配置 kali 的参考文章</h1><h2 id="注意仅供参考噢-详细的要看自己的机器"><a href="#注意仅供参考噢-详细的要看自己的机器" class="headerlink" title="注意仅供参考噢~ 详细的要看自己的机器"></a>注意仅供参考噢~ 详细的要看自己的机器</h2><p><a href="https://blog.csdn.net/chenyanhui1087/article/details/53127884?spm=1001.2014.3001.5506">配网参考之一</a></p><p><img src="https://z1.ax1x.com/2023/09/22/pPowxzD.png"></p><p><a href="https://blog.csdn.net/qq_52549196/article/details/122253828?spm=1001.2014.3001.5506">共享文件夹参考之一</a></p><p><img src="https://z1.ax1x.com/2023/09/22/pPo0SQe.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>To Do List</title>
      <link href="/posts/b1bb634af5d7/"/>
      <url>/posts/b1bb634af5d7/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="错了捏 ~~~~~~~~~" data-whm="G！当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="b97531221aa778d48dd5ac6f75188e3f28515ecf3be11652d1dff7db86c213de">3b2333c8d5322a4ab5f12d52cc99e8f29f59f39b1b15bcb64a49c584a6ab882d01f02edff4f1fa8035b63abeb705f488c7d14afe9eac1af89a69fa558bd46dee6dda5cfda479695eaa054663bf8479917630c379e1232a0b24f88720a92e4d6ea045ec9913f1a6b9d865ebea7d49fbbb5bac1ff80b66db094143af139746ff9aaa3bf2d95a964f6362ba16869fdfa68a2f443ab7a9079b534840bd72db861ac179570067fd231d633f785dec322a13fa5871c9c9354aa57ca3e2be273d117bedb9a69c46020097a196d434ef95e4592b75a2356af1ca953abfd033eb9e0b62f9fd9e8b6af67f178b42331bbe22238ac6361afe91fdc055d1184cafe4f35b999abfe2cd74408d9ebaed6ed6316fd56381acf9c263aebdd1ca08dc8665b755bb897084ea86f03ffaf054b2cd32efc3634ab8abe3f8fa376ae971b1c7ad47e078c43cb307621e89ed89f0fc9c45b50dc18c01f8ea4800d383908454df6e0fa009104edf6196357e8dee3867e1a63e26a9cf7d44fe20672b8b9dd9a156d12bf0e81dfb3bd71a406aab9b32040284e85e4839a86543f4975fc64ec59fb5d4d458d6f82b5d00544c144d7a98167bd1456932f5109f5c5c3e05e56a1346a0cf487d8aa29d6e3401760de112a37276b6dbfd6e7b68c10a526443a771090353fefd394f5ac627656831d57b286488c1e8cf8eeb66a33e398188c19d9df26c800f6429b675d2ea16d888bc4c571514f1de1f4126379bbfc0d5e200ac8bc476dbe8f49a43b642f3e1f0d9a884b79790dc0bc10ac888ae091d4464273e63a19ade8cf0dabb2305f4d052dee3ba4460fbd6432b907425f042b25ceacf9a6970aabf1dfe33fec8d13efe402acd9591a78cba6b9d66a7f8221d5ede8010071e2d61202a99739da5fb93cc7399f8259a277231bad6c5a291f392ff0e42cf4ebc50954086199e28c6509ef780c26b0de1ba64a8c200b7904eeb18265154daf7398fa6d1173d6babc5f1f366aea1ed565d97137e0f5352ee6dc7c83c98f583085c227a889a6465f216abe01a2d38d9193cb18e2c9f118f62e430abcb6447511badac9cf257f3e2b583f5186274496ae602040c494b5e2483db5b5d014687fbb19f2c6a9b436a1b80e70202b4859b110bc7a500446f13da696e6d87e8050ef34478744ad1f7085ff85289425da096871908b0ace648ffac4f22d424cbdb311cef380e9cc3c11c2ecae1a25cf4f91a379fcf37080ab8f95df796b6dffd43d58cb7912ef5ca32c62fa56d9fcc7698837a7f854990ae5b3c13658d439f12c15da06454c71946394e32b33beabbef00f2ca0b8c89834c2fce404c09a60dbea6bed7186c0bb3c74855db04b8d9fe23bbbb674bb4c9619b0ee049de57d33ec3bae7225293f60a439896db076dea0eda7249c52228c302fe43fffb37602f0ff37c2e1df382f3e2d4dd04e35494abfeaebdd1d8bb60a4ae715b9c2590d89d4107d41d93d64a8e75cc3a27a8affa8f9059e9a9e821e322cf1eb036d9cebeada4ff6e1d3331faf44acde65d7c50b2736150d07610ade77f67f772df423f9660041801b83b5e927f500edfff608f96d718c601ddd7d19392e17c71559846eb9ffc4d6e36d17762a4c27a33e968b9da37aafd79d639e56aa265b602f08d3883072497db0d4c53a299c5c339af785f2563f938e63992553b88f33afc76060170efa89dade70738d0b0ab0a1120cf082936ee56cdafb3c65145d0fb712854970cdc78911d29ecf79a52d20109340c56ebef3ff0067efe880fb13544c41c4c4bb746487ae21cb0bfe7c330b88a4aff5a476d3183f3016e37a64e014ce43b4ba9a3f305568396be36c016507c268b303474a452b08470082fb550c1824d1b7ba07193c08647bfc2440ced544c7462642a7db25241879f5294858ea99d4e97860791101e45dfafa08c385214e216abb8516a9d428cf6b1acf9d9e0d83892bdbabe962affa1c74f477712f25b3c7154ec7316e43abc4a49236db3545583dcaa2e22099e32dbc8d77564cb2f277dc6b3864bcf5da02300859bad1e5ce7c8128e0f0b4e87a974359c7654eaaceeb4dc20ebb931c8b61c2b679a8d513e2a67ef54619c3593cdf534650f0a59198e4cbeb16dbf7bdf39e5529e3ecfc8d9d036bd270e7b866423ff8dc2507b046038ab9e058f4275f1b1a0eb091ccb1ac4f4a5820314f69d169f3c6135c364b0de44b2f9001932391f8d196e8911a5223b432a172e28cf5af44c558e315dca680a9ec0da123f52e9a3ac2629f7fa6979d2e952857b36c22f0520f55fd986e760025092c8593fc851b6d06b2b806b829b7eee3ef309b0cdc891a18f605c2fbcd8e1430703362f44278eaa92a8434deb09f1d2668bf7e38ef8457a94d75dcaf1267c37fbaa6860556c82f503fb653eab791944ba41aaeb669404ab7adcec7b187e7fa11cad1d1381053004efe86247ba2e2d343d2b85b2457e638d9ac43fc5983b68f7f26af228bcb47463ac5760c67faabc4b472b6afff989a788b66c05e3881b8e520a99210a47cc87a18c7ed129babd8252fae83fa7f585b3ccd42b10afea9d602eb065e78052308e3cef37b109c372acaa70ddc4761246f71cd4ebe46104b51cce791bd4ecafa0e9593c6f0080e2dd3b2ed12f31a5c73bf2dbccf7987cbce383429f47cf4fd085a1f4ad71eaff40e81695a8346b5cecd4614288d249bc401d7ac8a8b3ca8ae4c45e041c5200a5dddcd670fb0bb59c220744c7f2dcc78fe904091e6d8b39042cae62a86a166a62e5b07a25c59f08a78a6aa7c9e6a8ce57ef260a9a895f64cef98c86db5b83ec07cb764b10f4e4cdac3053d651f234ee7904111a5c9b2e43c84d8dfbc09a2aaaf189b88cba684bd4b01da5b18c535e98079461162dc0d478bb32b0599cb74a3f07315966b5a0368c1d04992eae666a85d63dfd0fd8582e4b1f50e738ac1dd027891b488934564521acb3579ffebec8635cb5a9f58fc4c89e056b444f68421556b9a083cf542bc37d1e07d95f4ee61998b41486a0f0882da38b134fcae33bd1d9aeb951e3795017712d877682b5d422a99d9c2a9b951cb2b0dc1ea36c06c3b1789c194296cdc906828caba117e166db52b6a21c8123c946f6811c1c2fc16b267a9fdd9a157c9c6729f9afbd0c595650e3b0623a6228ed1dedc8cc84ac92f1dea4c4e249f5d5c1b596b39a1f15c86758c0b4f4009b06ca7ad316db9d1a8052321341721bd70ec3b42b49ef2e980c7a192263910e9371340a5e558554d5513af15cad2d4fe112e1157e4c330216c3d94ec7c7ea556522d8b7fa64271bc5393ec67300149a6f45ca939a9d7063891e6d63c1b3c426e7aa75d58a155c1f3d61784300bfcc6714a865683a922c26228e69b3c0a4baababa91da92512378050b239399078968065a39be8cc4a0b460a1ec5b9fc56659fbb188918ec28bb53efb3ea34b99520e427ff2f7e9ce2ed2a85a3a3c4ed1aa9588cc8df68eb399b0380db641859862e89770c4e5c8b4f1348f9820982b3c7c83f86b748199e878761db7deacfe1d5e03f63d3b952a664e36753d351368f2e5f94b860f365d5dc2623863779b430b29ecdf62e0347302707e88613fedc6ac4f625bc8776b35d666b7c7be1ede854d7791d525d5df587bf43d5b6c3ec71aa6c81b3df72aebf92d11f8613be720ed1f3b431615e462b815c36961f9f70801112483aabf8e1d7f39346ba42335133022c1f433d136155d028689fc98e2eaa03fed7ed5061d18ec318e805ebf64d419dea79d1eb9dbcc400967d352fcce5a4d1c700242d0a480792ee11a8492a6431ecc2f374dc340119e985d490514febc28a34320ec11e829cb6c1b71d56815deea42b4d457e10c83c95145f3f3ecafd9c333aaef7acc6a1336c9edee37d1ed12bd86ed08cd332c9cc9fca7e6b74d9bd76a6fe1019921847f64ec3f0377f7ac99bb5c04e880f07551432f4fe1958817abe55e86f6ae89122e97e74004c80d7699bb7bcaf6c39d7235e0e821a137a2beca74307ecbcf71a06374e1144ed78ca4b1bfa00f86bf820faac14d0760663698282addd606743c4ce973dd48d1e3a8913782fbb6bc9e6d4f988e5f6f3a1bf690a90683efb3ebad6b656582670cec54120f3f743c33aaf6be51299e91d926b6152fe1369294b229fd24e90a970f807044b5719c16577ccda943db2ef9cdc9389ebc111f388d6baefbea19ee9aa4c74121c1d57b33e3eb08f4552721b0f34e9ed2a1ac9a478dbe92fbe9da1ac5cf1e4798b11db0325853436a7199e07dbeeddb8cdca52809e56a53630e66eb6cd4173631f9b442ed8a948ae1e130940531a81933f21967ed191c21d48dd1085697de273d09986121f2d5bfff676f410abedc40c5c60512e7d53edb9feacac895427dcdc501d6ece0aec7721904e7ef6b6cc3b93d5ded2d6bcbd59f46e86e1ceba0559f75e43571ece327ea16aaed9ac998e5487a3f4bba851ca98c92e441ff4ea445b0798186a5908d4ec45a0225d4d1cb50892f833859c0c2391d12491e750cb58d53e720d737dcc121cea7ff2ba83c2401da8345c5edcb371da4bb5f1d99892b9d1b40bc19f8b9168648eb6ac0c0626f6c9b562554e215683affbbe8e865ae4ea129c19ce1c939334153404597e0fb7f22d41e83fe661a0e6af41a91c5389e2dee4b60ba853472e858b7e316eba807c24ccb7e337b6df67ad680d40d65ce49886864dd7046dd8afa701c8c416b501d47f2312f76eff6e276b90cec8f089444d5a04c8af9edd8d4b12be02f1344658eb763cc418692403bce64801b19f043ec4dd3bed2007bff2447c80d4e372fa045ec3067ed82346c509f222f42aa7c7e2b5f1c9e140eaef89deafc2aded638f7d0e625d0edc74b70a18fcd22b7e857af93639d2b4822d81fc456e335ef06cce39936ae56b5623b24249f86f4737e9a61e6f8fcaa01b8d30ca4df43832d490ae6b4269dcf572829b709dcaa154dc8dfdd84619bd602f6fa63ac9a66b9a093857a2304826402499c3d1372d077d2d8378cec751c557af3c2f39c5ee38901fbf7d8b6735311cfe9cc5c7369a468337602b429c6f0eaa44087e50db576231a177c8f3cc0166caa4efcc756f9a24a8f887de234e29bfe681acc41158111f12b562139903b3a79a9149ccb4825cbc11ddf35cb2604056dcf983a1aab28c4e917c5fb2d50ab4e3830acb2a376a1ce9ed094e3e515ff0b1b7d6d7631615234968b614cff4be84373151f427c186bd7ad7d8da9e757a98ae58a8c560ec267bd49ecfa4d071065c3164c375e964136915d0293c1d3da6aad3f30557a918bfa7414dd9a3f7b0891ba631b5f9e1c703a658a55b033e54cbd89630d17c2f92e71d1e2e6da6d32039f45581cbab7da325d741b7519fae6d3ff39a923c79aeb53155e39069a29fe193d4c8a75eb012acc99671f2e205efff97ba5bb0fe2b91b84557f7240d5c2dd0c56bd873f5d0e4bf1d530d30486493e9afe5</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">猜猜密码 ~</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> ToDoList </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ToDoList </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于kali sda1爆满扩容</title>
      <link href="/posts/3469cd8dc23b/"/>
      <url>/posts/3469cd8dc23b/</url>
      
        <content type="html"><![CDATA[<h1 id="前言（起因"><a href="#前言（起因" class="headerlink" title="前言（起因"></a>前言（起因</h1><ul><li>一天感觉 kali 怪怪的  就查看了一下内存情况</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure><p><img src="https://z1.ax1x.com/2023/09/21/pPIjyvT.png"></p><p>果不其然…   于是到处搜集资料一步一步进行 sda1 的扩容</p><h1 id="一、先进行磁盘的扩容"><a href="#一、先进行磁盘的扩容" class="headerlink" title="一、先进行磁盘的扩容"></a>一、先进行磁盘的扩容</h1><p><a href="https://blog.csdn.net/sunjikui1255326447/article/details/96430918">这部分参考</a></p><p><img src="https://z1.ax1x.com/2023/09/21/pPIjXad.png"></p><h1 id="二、唤起-gparted"><a href="#二、唤起-gparted" class="headerlink" title="二、唤起 gparted"></a>二、唤起 gparted</h1><p><a href="https://zhuanlan.zhihu.com/p/102203354">Gparted</a>   我 kali 的 gparted 是自带的还是以前下载的（？</p><p>没有就直接安装一下~</p><p>先用命令进入root模式 省的一直sudo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><p>唤起工具 gparted</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gparted</span><br></pre></td></tr></table></figure><p><img src="https://z1.ax1x.com/2023/09/21/pPIvTFs.png"></p><p><img src="https://z1.ax1x.com/2023/09/21/pPIv7Yn.png"></p><blockquote><p>（我这里存在未分配是因为我之前添加了空间但是没扩进去…）</p></blockquote><h1 id="三、删除-extended-和-swap-分区以便进行扩容"><a href="#三、删除-extended-和-swap-分区以便进行扩容" class="headerlink" title="三、删除 extended 和 swap 分区以便进行扩容"></a>三、删除 extended 和 swap 分区以便进行扩容</h1><p>先停用 swap 分区</p><p><img src="https://z1.ax1x.com/2023/09/21/pPIvOyT.png"></p><p>然后删除 swap 分区</p><p><img src="https://z1.ax1x.com/2023/09/21/pPIvXOU.png"></p><p>接着删除 extended 分区</p><p><img src="https://z1.ax1x.com/2023/09/21/pPIvvmF.png"></p><h1 id="四、对-sda1-进行扩容"><a href="#四、对-sda1-进行扩容" class="headerlink" title="四、对 sda1 进行扩容"></a>四、对 sda1 进行扩容</h1><p><img src="https://z1.ax1x.com/2023/09/22/pPo0loq.png"></p><p><strong>记得预留出空间给 swap 分区</strong></p><p><img src="https://z1.ax1x.com/2023/09/22/pPor6pV.png"></p><p>还原 extended 和 swap 分区</p><p><img src="https://z1.ax1x.com/2023/09/22/pPorclT.png"></p><p>👇👇👇</p><p><img src="https://z1.ax1x.com/2023/09/22/pPorg6U.png"></p><p>👇👇👇</p><p><img src="https://z1.ax1x.com/2023/09/22/pPorWm4.png"></p><p>👇👇👇</p><p><img src="https://z1.ax1x.com/2023/09/22/pPorf0J.png"></p><p>然后退出保存</p><p><img src="https://z1.ax1x.com/2023/09/22/pPor5kR.png"></p><p>再次 df -h 查看扩容情况</p><p><img src="https://z1.ax1x.com/2023/09/22/pPorofx.png"></p><p><em><strong>成功？ 很多人到这一步就以为成功了</strong></em></p><p><em><strong>扩容是扩了 但是如果你重启会发现 启动的十分甚至有九分之慢</strong></em></p><h1 id="五、修复-SWAP-分区"><a href="#五、修复-SWAP-分区" class="headerlink" title="五、修复 SWAP 分区"></a><em><strong>五、修复 SWAP 分区</strong></em></h1><p><a href="https://blog.csdn.net/qq_45774670/article/details/110673804?ops_request_misc=&request_id=&biz_id=102&utm_term=kali%E6%89%A9%E5%AE%B9sda1%E5%90%8E%E5%AF%BC%E8%87%B4%E5%90%AF%E5%8A%A8%E5%8F%98%E6%85%A2&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-110673804.142%5Ev71%5Eone_line,201%5Ev4%5Eadd_ask&spm=1018.2226.3001.4187">以下参考</a></p><p><img src="https://z1.ax1x.com/2023/09/22/pPor7p6.png"></p><p>我们首先要获取新 swap 分区的 uuid</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blkid</span><br></pre></td></tr></table></figure><p><img src="https://z1.ax1x.com/2023/09/22/pPo6Peg.png"></p><p>这个 uuid 复制下来 后面要用</p><p><img src="https://z1.ax1x.com/2023/09/22/pPo6EYn.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure><p><a href="https://zhuanlan.zhihu.com/p/61515833">关于 vim 命令的使用~</a> </p><p><img src="https://z1.ax1x.com/2023/09/22/pPo6VWq.png"></p><p>将这部分的 uuid 改成新的 uuid</p><p>接着</p><p><img src="https://z1.ax1x.com/2023/09/22/pPo6mlV.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/initramfs-tools/conf.d/resume</span><br></pre></td></tr></table></figure><p><img src="https://z1.ax1x.com/2023/09/22/pPo6uOU.png"></p><p>将这部分的 uuid 也改成新的 uuid</p><blockquote><p>最后用一下这个命令重建一下？（我的没用）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br></pre></td></tr></table></figure><p>然后重启一下 kali 就完成扩容啦~</p>]]></content>
      
      
      <categories>
          
          <category> Tricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/31d9550ac14a/"/>
      <url>/posts/31d9550ac14a/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
